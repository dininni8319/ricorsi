{"version":3,"file":"static/js/80.f10c9a2f.chunk.js","mappings":"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","sources":["components/Views/Ente/style.ts","components/Views/Ente/Searched.tsx","components/Views/Ente/CardDetail.tsx","components/Views/Ente/Ente.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperStyleComponent = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-content: space-between;\n    padding: 20px 5px;\n    width: 80vw;\n\n    span {\n        padding-left: 2px;\n        color: ${(props) => props.theme.blackColor};\n    }\n\n    h3 {\n        color: ${(props) => props.theme.colorGold};\n    }\n\n    @media only screen and (max-width: 1500px) {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    @media only screen and (max-width: 765px) {\n        grid-template-columns: 1fr;\n        align-items: center;\n        padding: 3px;\n        width: 100%;\n    }\n`;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { baseURL } from '../../Utilities/index';\nimport { Search } from '../../UI/index';\nimport { ObjFormType } from '../../interfaces/interfaces';\nimport useHttp from '../../../Hooks/useHttp';\nimport useSearch from '../../../Hooks/useSearch';\n\nconst Searched = () => {\n    const [searchedRicorsi, setSearchedRicorsi] = useState<any>([]);\n    const {\n        searchedTerm,\n        selectedItem,\n        cardId,\n        handleSelectedItem,\n        handleChange,\n        handleResetSearch,\n        handleNavigate\n    } = useSearch(setSearchedRicorsi);\n\n    const handleSearched = useCallback(\n        ({ data }: { data: ObjFormType[] }) => {\n            setSearchedRicorsi(() => [...data]);\n        },\n        [searchedTerm]\n    );\n\n    const {\n        isLoading: loadingSearch,\n        error: errSearch,\n        sendRequest: fetchSearched\n    } = useHttp(handleSearched);\n\n    useEffect(() => {\n        if (searchedTerm.length > 3) {\n            fetchSearched({\n                url: `${baseURL}/api/cienneffe/ricorsi/search=${searchedTerm}`\n            });\n        }\n    }, [fetchSearched]);\n\n    return (\n        <Search\n            title=\"Ente\"\n            handleChange={handleChange}\n            handleResetSearch={handleResetSearch}\n        >\n            {searchedRicorsi?.map(\n                (searched: { [key: string]: string }, id: number) => {\n                    return (\n                        <ul\n                            className={`bg-white p-2 shadow-md ${\n                                selectedItem && cardId === parseInt(searched.id)\n                                    ? 'active-class'\n                                    : ''\n                            }`}\n                            onMouseOver={() =>\n                                handleSelectedItem(parseInt(searched?.id))\n                            }\n                            onClick={() =>\n                                handleNavigate(\n                                    'ricorsi_detail',\n                                    parseInt(searched.id)\n                                )\n                            }\n                            key={id}\n                        >\n                            <li>\n                                <span className=\"font-semibold pr-2\">\n                                    Numero Ricorso:\n                                </span>\n                                {searched.numero_ricorso}\n                            </li>\n                            <li>\n                                <span className=\"font-semibold pr-2\">\n                                    Ente:\n                                </span>\n                                {searched.ente}\n                            </li>\n                            <li>\n                                <span className=\"font-semibold pr-2\">\n                                    Anno imposta:\n                                </span>\n                                {searched.anno_imposta}\n                            </li>\n                            <Link to={`/ricorsi_detail/${searched.id}`}>\n                                Dettaglio Ricorso\n                            </Link>\n                        </ul>\n                    );\n                }\n            )}\n        </Search>\n    );\n};\n\nexport default Searched;\n","import { Link } from 'react-router-dom';\nimport { EnteType } from '../../interfaces/interfaces';\n\nconst CardDetail = ({ ente, id }: { ente: EnteType; id: number }) => {\n    return (\n        <section key={id}>\n            <h3 className=\"card-title mb-3\">\n                Descrizione Comune: <span>{ente.descrizione_comune}</span>\n            </h3>\n            <ul className=\"border-custom ul-style-custom\">\n            <li>\n                    <span className=\"font-bold\">Regione:</span>\n                    <span>{ente.regione}</span>\n                </li>\n                <li>\n                    <span className=\"font-bold\">Provicia:</span>\n                    <span>{ente.provincia}</span>\n                </li>\n                <li>\n                    <span className=\"font-bold\">Email:</span>\n                    <span>{ente.email}</span>\n                </li>\n                <li>\n                    <span className=\"font-bold\">Indirizzo:</span>\n                    <span>{ente.indirizzo}</span>\n                </li>\n                <li>\n                    <span>Numero di telefono:</span>\n                    <span>{ente.numero_telefono}</span>\n                </li>\n                <li>\n                    <span className=\"font-bold\">Codice catastale:</span>\n                    <span>{ente.codice_catastale}</span>\n                </li>\n            </ul>\n\n            <div className=\"flex justify-between py-1\">\n                <Link to={`/form_ente/${ente.id}`}>\n                    Aggiorna l'ente\n                </Link>\n                <Link to={`/detail_ente/${ente.id}`}>\n                    Dettaglio dell'ente\n                </Link>\n            </div>\n        </section>\n    );\n};\n\nexport default CardDetail;\n","import { useState, useEffect, useCallback, memo } from 'react';\nimport { EnteType } from '../../interfaces/interfaces';\nimport { baseURL } from '../../Utilities/index';\nimport useHttp from '../../../Hooks/useHttp';\nimport { Card, Loader3, Paginate } from '../../UI/index';\nimport { WrapperStyleComponent } from './style';\nimport Searched from './Searched';\nimport CardDetail from './CardDetail';\nimport { perPage } from '../../Utilities/index';\n\nconst DoneImg = require('../../../assets/icons/icon-done.png');\nconst EntePage = () => {\n    const [enti, setEnti] = useState<EnteType[]>([]);    \n    \n    const handleEnti = useCallback(({ enti }: { enti: EnteType[] }) => {\n        setEnti(() => [...enti]);\n    }, []);\n\n    const [itemOffset, setItemOffset] = useState(0);\n    const itemsPerPage = 9;\n    const { pageCount, currentItems } = perPage(\n        itemOffset,\n        itemsPerPage,\n        enti\n    );\n\n    const handlePageClick = (event: any) => {\n        const newOffset = (event.selected * itemsPerPage) % enti.length;\n        setItemOffset(newOffset);\n    };\n\n    const {\n        isLoading,\n        sendRequest: fetchEnti\n    } = useHttp(handleEnti);\n\n    useEffect(() => {\n        fetchEnti({ url:`${baseURL}/api/cienneffe/ente` });\n    }, [fetchEnti]);\n\n    return (\n        <div className=\"height-custom flex flex-col items-center\">\n            <>\n                <Searched />\n                <h1>Enti</h1>\n                <div>\n                    <Paginate\n                        currentItems={currentItems}\n                        pageCount={pageCount}\n                        handlePageClick={handlePageClick}\n                    />\n                </div>\n                <div className='flex justify-center'>\n                  {currentItems.length === 0 && !isLoading && <img src={DoneImg} alt=\"done image\"  width='200px' height='200px'/>}\n                </div>\n            </>\n            <WrapperStyleComponent>\n                <>\n                    {currentItems && !isLoading ? (\n                        currentItems?.map((ente: any, id: number) => {\n                            return (\n                                <>\n                                    <Card\n                                        taxunit={ente}\n                                        id={id}\n                                        path=\"delete/ente\"\n                                        current={enti}\n                                        setCurrent={setEnti}\n                                    >\n                                        <CardDetail id={id} ente={ente} />\n                                    </Card>\n                                </>\n                            );\n                        })\n                    ) : (\n                        <Loader3 />\n                    )}\n                </>\n            </WrapperStyleComponent>\n        </div>\n    );\n};\n\nexport default memo(EntePage);\n"],"names":["WrapperStyleComponent","styled","props","theme","blackColor","colorGold","useState","searchedRicorsi","setSearchedRicorsi","useSearch","searchedTerm","selectedItem","cardId","handleSelectedItem","handleChange","handleResetSearch","handleNavigate","handleSearched","useCallback","data","useHttp","fetchSearched","isLoading","error","sendRequest","useEffect","length","url","baseURL","title","map","searched","id","className","parseInt","onMouseOver","onClick","numero_ricorso","ente","anno_imposta","to","descrizione_comune","regione","provincia","email","indirizzo","numero_telefono","codice_catastale","DoneImg","require","EntePage","enti","setEnti","handleEnti","itemOffset","setItemOffset","perPage","pageCount","currentItems","fetchEnti","handlePageClick","event","newOffset","selected","src","alt","width","height","taxunit","path","current","setCurrent","memo"],"sourceRoot":""}